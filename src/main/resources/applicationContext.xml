<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xsi:schemaLocation="
    		http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd   
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-4.3.xsd
            http://www.springframework.org/schema/mvc    
    		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
    		http://www.springframework.org/schema/tx  
	        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd  
	        http://www.springframework.org/schema/aop   
	        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	        http://cxf.apache.org/jaxws 
	        http://cxf.apache.org/schemas/jaxws.xsd">
    
    <!-- <bean id="propertyConfigurer"    
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">    
        <property name="location" value="classpath:jdbc.properties" />    
    </bean> -->
    
    <context:property-placeholder
        ignore-unresolvable="true" location="classpath*:/*.properties" />
    
    <!-- 扫描的包 -->        
    <context:component-scan base-package="com.zoop.controller"/>
    <context:component-scan base-package="com.zoop.service"/>
    <context:component-scan base-package="com.zoop.dao"/>
    <context:component-scan base-package="com.zoop.daoother"/>       
    
    <mvc:annotation-driven />
     
    <!-- spring4以后的不用之前那种配置 -->        
	<mvc:annotation-driven>  
       <mvc:message-converters register-defaults="true">  
           <bean  
               class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
               <property name="objectMapper">  
                    <bean class="com.zoop.service.JsonMapper">  
                   </bean>  
               </property>  
           </bean>  
       </mvc:message-converters>  
   </mvc:annotation-driven>

	<bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${driver}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>

    <bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

	<bean id="sessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource1"></property>
		<property name="mapperLocations" value="classpath:com/zoop/mapper/*.xml"></property>
	</bean>

    <bean id="sessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource2"></property>
        <property name="mapperLocations" value="classpath:com/zoop/other/*.xml"></property>
    </bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zoop.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sessionFactory1"></property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zoop.daoother"></property>
        <property name="sqlSessionFactoryBeanName" value="sessionFactory2"></property>
    </bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource1"></property>	
	</bean>

	<bean id="testService" class="com.zoop.service.impl.TestServiceImpl"></bean>

    <!--Jedis连接池的相关配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <constructor-arg name="host" value="${redis.host}" />
        <constructor-arg name="port" value="${redis.port}" type="int" />
        <constructor-arg name="timeout" value="${redis.timeout}" type="int" />
        <constructor-arg name="password" value="${redis.password}" />
        <constructor-arg name="database" value="${redis.database}" type="int" />
    </bean>

	<!--事务配置的形式-->
	<tx:advice id="useTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="useTrem" expression="execution(public * com.zoop.service.impl.*.*(..))"/>
		<aop:advisor pointcut-ref="useTrem" advice-ref="useTxAdvice"/>
	</aop:config>
	<!--事务注解的形式  只需要在想要的方法上加注解就行-->
	<!--
	<tx:annotation-driven transaction-manager="transactionManager"/>
	-->
	
	<!-- 上传文件配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="10485760000"></property>
		<property name="maxInMemorySize" value="40960"></property>
	</bean>
	
	<bean class="com.zoop.config.SwggerConfig" />
	
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />
	
	<import resource="classpath:META-INF/cxf/cxf.xml" />    
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
	<jaxws:endpoint id="cxfDemo" implementor="com.zoop.webservice.impl.CXFDemoImpl" address="/cxfDemo">
		<jaxws:properties>  
            <entry key="schema-validate-enabled" value="true"/>  
        </jaxws:properties>
	</jaxws:endpoint>
	
</beans>            